{"ast":null,"code":"var _jsxFileName = \"D:\\\\Git\\\\Macradon\\\\ITTWEB1_24\\\\pro-gamer-moves\\\\src\\\\Game.tsx\";\nimport * as React from 'react';\nimport { Button } from 'reactstrap';\nimport Board from './Board';\nimport Grid from './Grid';\n\nclass Game extends React.Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const nextState = {\n      board: prevState.board\n    };\n\n    if (prevState.board.rows !== nextProps.rows || prevState.board.columns !== nextProps.columns) {\n      prevState.board.stop();\n      nextState.board = new Board(nextProps.rows, nextProps.columns);\n      nextState.running = false;\n    }\n\n    if (nextProps.onScoreChange) {\n      nextState.board.onScoreChange = nextProps.onScoreChange;\n    }\n\n    if (nextProps.running) {\n      nextState.running = true;\n    }\n\n    return nextState;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: new Board(this.props.rows, this.props.columns),\n      currentFlash: undefined\n    };\n    this.tryPosition = this.tryPosition.bind(this);\n    this.trySound = this.trySound.bind(this);\n    this.onFlash = this.onFlash.bind(this);\n    this.speak = this.speak.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.state.board.stop();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (!prevProps.running && this.props.running) {\n      this.state.board.start(this.onFlash);\n    }\n\n    if (prevProps.running && !this.props.running) {\n      this.state.board.stop();\n    }\n  }\n\n  render() {\n    const props = {};\n\n    if (this.state.currentFlash) {\n      props.highlight = this.state.currentFlash.position;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Grid, Object.assign({\n      rows: this.state.board.rows,\n      columns: this.state.board.columns\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Button, {\n      color: \"secondary\",\n      disabled: !this.props.running,\n      onClick: this.tryPosition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Position\"), React.createElement(Button, {\n      color: \"secondary\",\n      disabled: !this.props.running,\n      onClick: this.trySound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Sound\"));\n  }\n\n  tryPosition() {\n    this.state.board.samePosition();\n  }\n\n  trySound() {\n    this.state.board.sameSound();\n  }\n\n  onFlash(newFlash) {\n    this.setState({\n      currentFlash: newFlash\n    });\n    this.speak(newFlash.sound.toString());\n  }\n\n  speak(text) {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance();\n      utterance.text = text;\n      utterance.voice = speechSynthesis.getVoices().filter(voice => {\n        return voice.name === \"Allison\";\n      })[0];\n      window.speechSynthesis.speak(utterance);\n    }\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["D:/Git/Macradon/ITTWEB1_24/pro-gamer-moves/src/Game.tsx"],"names":["React","Button","Board","Grid","Game","Component","getDerivedStateFromProps","nextProps","prevState","nextState","board","rows","columns","stop","running","onScoreChange","constructor","props","state","currentFlash","undefined","tryPosition","bind","trySound","onFlash","speak","componentWillUnmount","componentDidUpdate","prevProps","snapshot","start","render","highlight","position","samePosition","sameSound","newFlash","setState","sound","toString","text","window","utterance","SpeechSynthesisUtterance","voice","speechSynthesis","getVoices","filter","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport Board from './Board';\r\nimport Flash from './Flash';\r\nimport Grid from './Grid';\r\n\r\nexport interface IProps {\r\n    columns: number;\r\n    onScoreChange?: (prevScore: number, nextScore: number) => void;\r\n    rows: number;\r\n    running: boolean;\r\n}\r\n\r\nexport interface IState {\r\n    board: Board;\r\n    currentFlash?: Flash;\r\n}\r\n\r\nclass Game extends React.Component<IProps, IState> {\r\n\r\n    public static getDerivedStateFromProps(nextProps: IProps, prevState: IState) {\r\n        const nextState: any = { board: prevState.board };\r\n\r\n        if (prevState.board.rows !== nextProps.rows || prevState.board.columns !== nextProps.columns) {\r\n            prevState.board.stop();\r\n            nextState.board = new Board(nextProps.rows, nextProps.columns);\r\n            nextState.running = false;\r\n        }\r\n\r\n        if (nextProps.onScoreChange) {\r\n            nextState.board.onScoreChange = nextProps.onScoreChange;\r\n        }\r\n\r\n        if (nextProps.running) {\r\n            nextState.running = true;\r\n        }\r\n\r\n        return nextState;\r\n    }\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            board: new Board(this.props.rows, this.props.columns),\r\n            currentFlash: undefined,\r\n        }\r\n\r\n        this.tryPosition = this.tryPosition.bind(this);\r\n        this.trySound = this.trySound.bind(this);\r\n        this.onFlash = this.onFlash.bind(this);\r\n        this.speak = this.speak.bind(this);\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this.state.board.stop();\r\n    }\r\n\r\n    public componentDidUpdate(prevProps: IProps, prevState: IState, snapshot?: any) {\r\n        if (!prevProps.running && this.props.running) {\r\n            this.state.board.start(this.onFlash);\r\n        }\r\n\r\n        if (prevProps.running && !this.props.running) {\r\n            this.state.board.stop();\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        const props: any = {};\r\n        if (this.state.currentFlash) {\r\n            props.highlight = this.state.currentFlash.position;\r\n        }\r\n        return (\r\n            <div>\r\n                <Grid rows={this.state.board.rows} columns={this.state.board.columns} {...props} />\r\n                <Button color=\"secondary\" disabled={!this.props.running} onClick={this.tryPosition}>Position</Button>\r\n                <Button color=\"secondary\" disabled={!this.props.running} onClick={this.trySound}>Sound</Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private tryPosition() {\r\n        this.state.board.samePosition();\r\n    }\r\n\r\n    private trySound() {\r\n        this.state.board.sameSound();\r\n    }\r\n\r\n    private onFlash(newFlash: Flash) {\r\n        this.setState({ currentFlash: newFlash });\r\n        this.speak(newFlash.sound.toString());\r\n    }\r\n\r\n    private speak(text: string) {\r\n        if ('speechSynthesis' in window) {\r\n            const utterance = new SpeechSynthesisUtterance();\r\n            utterance.text = text;\r\n            utterance.voice = speechSynthesis.getVoices().filter((voice) => {\r\n                return voice.name === \"Allison\";\r\n            })[0];\r\n            window.speechSynthesis.speak(utterance);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}